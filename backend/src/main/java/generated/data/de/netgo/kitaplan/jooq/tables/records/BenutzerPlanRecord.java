/*
 * This file is generated by jOOQ.
 */
package de.netgo.kitaplan.jooq.tables.records;


import de.netgo.kitaplan.jooq.tables.BenutzerPlan;

import java.util.UUID;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BenutzerPlanRecord extends TableRecordImpl<BenutzerPlanRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.benutzer_plan.benutzer_id</code>.
     */
    public BenutzerPlanRecord setBenutzerId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.benutzer_plan.benutzer_id</code>.
     */
    public UUID getBenutzerId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.benutzer_plan.plan_id</code>.
     */
    public BenutzerPlanRecord setPlanId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.benutzer_plan.plan_id</code>.
     */
    public UUID getPlanId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BenutzerPlanRecord
     */
    public BenutzerPlanRecord() {
        super(BenutzerPlan.BENUTZER_PLAN);
    }

    /**
     * Create a detached, initialised BenutzerPlanRecord
     */
    public BenutzerPlanRecord(UUID benutzerId, UUID planId) {
        super(BenutzerPlan.BENUTZER_PLAN);

        setBenutzerId(benutzerId);
        setPlanId(planId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BenutzerPlanRecord
     */
    public BenutzerPlanRecord(de.netgo.kitaplan.jooq.tables.pojos.BenutzerPlan value) {
        super(BenutzerPlan.BENUTZER_PLAN);

        if (value != null) {
            setBenutzerId(value.getBenutzerId());
            setPlanId(value.getPlanId());
            resetChangedOnNotNull();
        }
    }
}
