/*
 * This file is generated by jOOQ.
 */
package de.netgo.kitaplan.jooq.tables.daos;


import de.netgo.kitaplan.jooq.tables.Plan;
import de.netgo.kitaplan.jooq.tables.records.PlanRecord;

import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class PlanDao extends DAOImpl<PlanRecord, de.netgo.kitaplan.jooq.tables.pojos.Plan, UUID> {

    /**
     * Create a new PlanDao without any configuration
     */
    public PlanDao() {
        super(Plan.PLAN, de.netgo.kitaplan.jooq.tables.pojos.Plan.class);
    }

    /**
     * Create a new PlanDao with an attached configuration
     */
    @Autowired
    public PlanDao(Configuration configuration) {
        super(Plan.PLAN, de.netgo.kitaplan.jooq.tables.pojos.Plan.class, configuration);
    }

    @Override
    public UUID getId(de.netgo.kitaplan.jooq.tables.pojos.Plan object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Plan.PLAN.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchById(UUID... values) {
        return fetch(Plan.PLAN.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.netgo.kitaplan.jooq.tables.pojos.Plan fetchOneById(UUID value) {
        return fetchOne(Plan.PLAN.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchOptionalById(UUID value) {
        return fetchOptional(Plan.PLAN.ID, value);
    }

    /**
     * Fetch records that have <code>woche BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfWoche(String lowerInclusive, String upperInclusive) {
        return fetchRange(Plan.PLAN.WOCHE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>woche IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchByWoche(String... values) {
        return fetch(Plan.PLAN.WOCHE, values);
    }

    /**
     * Fetch records that have <code>datum BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfDatum(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Plan.PLAN.DATUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datum IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchByDatum(LocalDate... values) {
        return fetch(Plan.PLAN.DATUM, values);
    }

    /**
     * Fetch records that have <code>wald BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfWald(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Plan.PLAN.WALD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>wald IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchByWald(Boolean... values) {
        return fetch(Plan.PLAN.WALD, values);
    }

    /**
     * Fetch records that have <code>offen BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfOffen(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Plan.PLAN.OFFEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>offen IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchByOffen(Boolean... values) {
        return fetch(Plan.PLAN.OFFEN, values);
    }

    /**
     * Fetch records that have <code>start BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfStart(LocalTime lowerInclusive, LocalTime upperInclusive) {
        return fetchRange(Plan.PLAN.START, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>start IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchByStart(LocalTime... values) {
        return fetch(Plan.PLAN.START, values);
    }

    /**
     * Fetch records that have <code>ende BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfEnde(LocalTime lowerInclusive, LocalTime upperInclusive) {
        return fetchRange(Plan.PLAN.ENDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ende IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchByEnde(LocalTime... values) {
        return fetch(Plan.PLAN.ENDE, values);
    }

    /**
     * Fetch records that have <code>abfahrt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfAbfahrt(LocalTime lowerInclusive, LocalTime upperInclusive) {
        return fetchRange(Plan.PLAN.ABFAHRT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>abfahrt IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchByAbfahrt(LocalTime... values) {
        return fetch(Plan.PLAN.ABFAHRT, values);
    }

    /**
     * Fetch records that have <code>kommentar BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchRangeOfKommentar(String lowerInclusive, String upperInclusive) {
        return fetchRange(Plan.PLAN.KOMMENTAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>kommentar IN (values)</code>
     */
    public List<de.netgo.kitaplan.jooq.tables.pojos.Plan> fetchByKommentar(String... values) {
        return fetch(Plan.PLAN.KOMMENTAR, values);
    }
}
